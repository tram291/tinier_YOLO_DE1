//This module will calculate the addresses and values of resized array 
`include "parameters.h"

module reorg_layer(
  clk,
  reset_n,
  enable,
  to_addr, from_addr
);
  parameter WIDTH = 12;
  parameter HEIGHT = 12;
  parameter DEPTH = 256;
  parameter WIDTH_IN = 24;
  parameter HEIGHT_IN = 24;
  parameter DEPTH_IN = 64;
  parameter STRIDE = 2;
  
  input wire clk;
  input wire reset_n;
  input wire enable;
  
  output reg [`ADDR_SZ-1:0] to_addr;
  output reg [`ADDR_SZ-1:0] from_addr; 
  
  reg [4:0] row, column, row_2, column_2;
  reg [7:0] channel, channel_2;
  reg [2:0] offset; 

  
  always @(posedge clk or negedge reset_n) begin
      if (~reset_n) begin 
          row <= 0;
          column <= 0;
          channel <= 0;
          row_2 <= 0;
          column_2 <= 0;
          channel_2 <= 0;
          offset <= 0;
          to_addr <= 0;
          from_addr <= 0;
      end 
      else begin
          if (enable) begin 
              offset = channel / DEPTH_IN;
              column_2 = column*STRIDE + offset%STRIDE;
              row_2 = row*STRIDE + offset/STRIDE;
              channel_2 = channel % DEPTH_IN; 
              
              from_addr = column_2 + WIDTH_IN*(row_2 + channel_2*HEIGHT_IN);
              to_addr = column + WIDTH*(row + channel*HEIGHT);              
              
              column = column + 1;
              if (column == WIDTH) begin
                  column = 0;
                  row = row + 1;
              end
              if (row == HEIGHT) begin
                  row = 0;
                  channel = channel + 1;
              end 
              if (channel == DEPTH) begin
                  channel = 0;
              end
          end          
      end
  end
  
endmodule
